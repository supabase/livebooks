# Prom Poller

## Deps

```elixir
Mix.install([
  {:nimble_csv, "~> 1.1"},
  {:vega_lite, "~> 0.1.3"},
  {:kino, "~> 0.5.0"},
  {:tesla, "~> 1.4"},
  {:jason, "~> 1.3"},
  # {:prometheus_parser, "~> 0.1.6"},
  {:prometheus_parser,
   git: "https://github.com/Logflare/turnio-prometheus-parser", branch: "master"}
])
```

## Forms

```elixir
project_ref = Kino.Input.text("Supabase Project Ref")
```

```elixir
bearer = Kino.Input.text("Supabase Project Service Role Key")
```

## Poll the Prometheus Endpoint

```elixir
key = Kino.Input.read(bearer)
ref = Kino.Input.read(project_ref)

middleware = [
  {Tesla.Middleware.BaseUrl, "https://#{ref}.supabase.co"},
  {Tesla.Middleware.Headers, [{"authorization", "Bearer " <> key}, {"apiKey", key}]}
]

{:ok, response} =
  middleware
  |> Tesla.client()
  |> Tesla.get("/admin/v1/privileged/project-metrics")

metrics =
  String.split(response.body, "\n")
  |> Enum.map(&PrometheusParser.parse(&1))
  |> Enum.reject(fn
    {:error, _y} -> true
    {:ok, %{value: nil}} -> true
    {:ok, _y} -> false
  end)
  |> Enum.map(fn {_x, y} -> y end)
```
